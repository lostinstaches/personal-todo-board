{"remainingRequest":"/Users/orange-juice/Code/VueMastery/personal-todo-board/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/orange-juice/Code/VueMastery/personal-todo-board/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/orange-juice/Code/VueMastery/personal-todo-board/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/orange-juice/Code/VueMastery/personal-todo-board/src/views/Board.vue?vue&type=template&id=188e5bc8&","dependencies":[{"path":"/Users/orange-juice/Code/VueMastery/personal-todo-board/src/views/Board.vue","mtime":1568387264799},{"path":"/Users/orange-juice/Code/VueMastery/personal-todo-board/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/orange-juice/Code/VueMastery/personal-todo-board/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/orange-juice/Code/VueMastery/personal-todo-board/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/orange-juice/Code/VueMastery/personal-todo-board/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"div\", { staticClass: \"board\" }, [\n    _c(\n      \"div\",\n      { staticClass: \"flex flex-row items-start\" },\n      [\n        _vm._l(_vm.board.columns, function(column, $columnIndex) {\n          return _c(\n            \"div\",\n            {\n              key: $columnIndex,\n              staticClass: \"column\",\n              attrs: { draggable: \"\" },\n              on: {\n                drop: function($event) {\n                  return _vm.moveTaskOrColumn(\n                    $event,\n                    column.tasks,\n                    $columnIndex\n                  )\n                },\n                dragover: function($event) {\n                  $event.preventDefault()\n                },\n                dragenter: function($event) {\n                  $event.preventDefault()\n                },\n                dragstart: function($event) {\n                  if ($event.target !== $event.currentTarget) {\n                    return null\n                  }\n                  return _vm.pickupColumn($event, $columnIndex)\n                }\n              }\n            },\n            [\n              _c(\"div\", { staticClass: \"flex items-center mb-2 font-bold\" }, [\n                _vm._v(\"\\n        \" + _vm._s(column.name) + \"\\n      \")\n              ]),\n              _c(\n                \"div\",\n                { staticClass: \"list-reset\" },\n                [\n                  _vm._l(column.tasks, function(task, $taskIndex) {\n                    return _c(\n                      \"div\",\n                      {\n                        key: $taskIndex,\n                        staticClass: \"task\",\n                        attrs: { draggable: \"\" },\n                        on: {\n                          dragover: function($event) {\n                            $event.preventDefault()\n                          },\n                          dragenter: function($event) {\n                            $event.preventDefault()\n                          },\n                          drop: function($event) {\n                            $event.stopPropagation()\n                            return _vm.moveTaskOrColumn(\n                              $event,\n                              column.tasks,\n                              $columnIndex,\n                              $taskIndex\n                            )\n                          },\n                          dragstart: function($event) {\n                            return _vm.pickupTask(\n                              $event,\n                              $taskIndex,\n                              $columnIndex\n                            )\n                          },\n                          click: function($event) {\n                            return _vm.goToTask(task)\n                          }\n                        }\n                      },\n                      [\n                        _c(\n                          \"span\",\n                          { staticClass: \"w-full flex-no-shrink font-bold\" },\n                          [\n                            _vm._v(\n                              \"\\n            \" +\n                                _vm._s(task.name) +\n                                \"\\n          \"\n                            )\n                          ]\n                        ),\n                        task.description\n                          ? _c(\n                              \"p\",\n                              {\n                                staticClass:\n                                  \"w-full flex-no-shrink mt-1 text-sm\"\n                              },\n                              [\n                                _vm._v(\n                                  \"\\n            \" +\n                                    _vm._s(task.description) +\n                                    \"\\n          \"\n                                )\n                              ]\n                            )\n                          : _vm._e()\n                      ]\n                    )\n                  }),\n                  _c(\"input\", {\n                    staticClass: \"block p-2 w-full bg-transparent\",\n                    attrs: { type: \"text\", placeholder: \"+ Enter new task\" },\n                    on: {\n                      keyup: function($event) {\n                        if (\n                          !$event.type.indexOf(\"key\") &&\n                          _vm._k(\n                            $event.keyCode,\n                            \"enter\",\n                            13,\n                            $event.key,\n                            \"Enter\"\n                          )\n                        ) {\n                          return null\n                        }\n                        return _vm.createTask($event, column.tasks)\n                      }\n                    }\n                  })\n                ],\n                2\n              )\n            ]\n          )\n        }),\n        _c(\"div\", { staticClass: \"column flex\" }, [\n          _c(\"input\", {\n            directives: [\n              {\n                name: \"model\",\n                rawName: \"v-model\",\n                value: _vm.newColumnName,\n                expression: \"newColumnName\"\n              }\n            ],\n            staticClass: \"p-2 mr-2 flex-grow\",\n            attrs: { type: \"text\", placeholder: \"New Column Name\" },\n            domProps: { value: _vm.newColumnName },\n            on: {\n              keyup: function($event) {\n                if (\n                  !$event.type.indexOf(\"key\") &&\n                  _vm._k($event.keyCode, \"enter\", 13, $event.key, \"Enter\")\n                ) {\n                  return null\n                }\n                return _vm.createColumn($event)\n              },\n              input: function($event) {\n                if ($event.target.composing) {\n                  return\n                }\n                _vm.newColumnName = $event.target.value\n              }\n            }\n          })\n        ])\n      ],\n      2\n    ),\n    _vm.isTaskOpen\n      ? _c(\n          \"div\",\n          {\n            staticClass: \"task-bg\",\n            on: {\n              click: function($event) {\n                if ($event.target !== $event.currentTarget) {\n                  return null\n                }\n                return _vm.close($event)\n              }\n            }\n          },\n          [_c(\"router-view\")],\n          1\n        )\n      : _vm._e()\n  ])\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}
{"remainingRequest":"/Users/orange-juice/Code/VueMastery/personal-todo-board/node_modules/babel-loader/lib/index.js!/Users/orange-juice/Code/VueMastery/personal-todo-board/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/orange-juice/Code/VueMastery/personal-todo-board/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/orange-juice/Code/VueMastery/personal-todo-board/src/views/Board.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/orange-juice/Code/VueMastery/personal-todo-board/src/views/Board.vue","mtime":1568318038249},{"path":"/Users/orange-juice/Code/VueMastery/personal-todo-board/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/orange-juice/Code/VueMastery/personal-todo-board/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/orange-juice/Code/VueMastery/personal-todo-board/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/orange-juice/Code/VueMastery/personal-todo-board/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.object.define-property\";\nimport \"core-js/modules/es6.object.define-properties\";\nimport \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/es6.array.for-each\";\nimport \"core-js/modules/es6.array.filter\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.function.name\";\nimport _defineProperty from \"/Users/orange-juice/Code/VueMastery/personal-todo-board/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapState } from 'vuex';\nexport default {\n  computed: _objectSpread({}, mapState(['board']), {\n    isTaskOpen: function isTaskOpen() {\n      return this.$route.name === 'task';\n    }\n  }),\n  methods: {\n    goToTask: function goToTask(task) {\n      this.$router.push({\n        name: 'task',\n        params: {\n          id: task.id\n        }\n      });\n    },\n    close: function close() {\n      this.$router.push({\n        name: 'board'\n      });\n    },\n    createTask: function createTask(e, tasks) {\n      this.$store.commit('CREATE_TASK', {\n        tasks: tasks,\n        name: e.target.value\n      });\n      e.target.value = '';\n    },\n    pickupTask: function pickupTask(e, taskIndex, fromColumnIndex) {\n      e.dataTransfer.effectAllowed = 'move';\n      e.dataTransfer.dropEffect = 'move';\n      e.dataTransfer.setData('task-index', taskIndex);\n      e.dataTransfer.setData('from-column-index', fromColumnIndex);\n    },\n    moveTask: function moveTask(e, toTasks) {\n      var fromColumnIndex = e.dataTransfer.getData('from-column-index');\n      var fromTasks = this.board.columns[fromColumnIndex].tasks;\n      var taskIndex = e.dataTransfer.getData('task-index');\n      this.$store.commit('MOVE_TASK', {\n        fromTasks: fromTasks,\n        toTasks: toTasks,\n        taskIndex: taskIndex\n      });\n    }\n  }\n};",{"version":3,"sources":["Board.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiDA,SAAA,QAAA,QAAA,MAAA;AACA,eAAA;AACA,EAAA,QAAA,oBACA,QAAA,CAAA,CAAA,OAAA,CAAA,CADA;AAEA,IAAA,UAFA,wBAEA;AACA,aAAA,KAAA,MAAA,CAAA,IAAA,KAAA,MAAA;AACA;AAJA,IADA;AAOA,EAAA,OAAA,EAAA;AACA,IAAA,QADA,oBACA,IADA,EACA;AACA,WAAA,OAAA,CAAA,IAAA,CAAA;AAAA,QAAA,IAAA,EAAA,MAAA;AAAA,QAAA,MAAA,EAAA;AAAA,UAAA,EAAA,EAAA,IAAA,CAAA;AAAA;AAAA,OAAA;AACA,KAHA;AAIA,IAAA,KAJA,mBAIA;AACA,WAAA,OAAA,CAAA,IAAA,CAAA;AAAA,QAAA,IAAA,EAAA;AAAA,OAAA;AACA,KANA;AAOA,IAAA,UAPA,sBAOA,CAPA,EAOA,KAPA,EAOA;AACA,WAAA,MAAA,CAAA,MAAA,CAAA,aAAA,EAAA;AACA,QAAA,KAAA,EAAA,KADA;AAEA,QAAA,IAAA,EAAA,CAAA,CAAA,MAAA,CAAA;AAFA,OAAA;AAIA,MAAA,CAAA,CAAA,MAAA,CAAA,KAAA,GAAA,EAAA;AACA,KAbA;AAcA,IAAA,UAdA,sBAcA,CAdA,EAcA,SAdA,EAcA,eAdA,EAcA;AACA,MAAA,CAAA,CAAA,YAAA,CAAA,aAAA,GAAA,MAAA;AACA,MAAA,CAAA,CAAA,YAAA,CAAA,UAAA,GAAA,MAAA;AAEA,MAAA,CAAA,CAAA,YAAA,CAAA,OAAA,CAAA,YAAA,EAAA,SAAA;AACA,MAAA,CAAA,CAAA,YAAA,CAAA,OAAA,CAAA,mBAAA,EAAA,eAAA;AACA,KApBA;AAqBA,IAAA,QArBA,oBAqBA,CArBA,EAqBA,OArBA,EAqBA;AACA,UAAA,eAAA,GAAA,CAAA,CAAA,YAAA,CAAA,OAAA,CAAA,mBAAA,CAAA;AACA,UAAA,SAAA,GAAA,KAAA,KAAA,CAAA,OAAA,CAAA,eAAA,EAAA,KAAA;AAEA,UAAA,SAAA,GAAA,CAAA,CAAA,YAAA,CAAA,OAAA,CAAA,YAAA,CAAA;AACA,WAAA,MAAA,CAAA,MAAA,CAAA,WAAA,EAAA;AACA,QAAA,SAAA,EAAA,SADA;AAEA,QAAA,OAAA,EAAA,OAFA;AAGA,QAAA,SAAA,EAAA;AAHA,OAAA;AAKA;AA/BA;AAPA,CAAA","sourcesContent":["<template>\n  <div class=\"board\">\n    <div class=\"flex flex-row items-start\">\n      <div\n        class=\"column\"\n        v-for=\"(column, $columnIndex) in board.columns\"\n        :key=\"$columnIndex\"\n        @drop=\"moveTask($event, column.tasks)\"\n        @dragover.prevent\n      >\n        <div class=\"flex items-center mb-2 font-bold\">\n          {{ column.name }}\n        </div>\n        <div class=\"list-reset\">\n          <div\n            class=\"task\"\n            v-for=\"(task, $taskIndex) in column.tasks\"\n            :key=\"$taskIndex\"\n            draggable\n            @dragstart=\"pickupTask($event, $taskIndex, $columnIndex)\"\n            @click=\"goToTask(task)\"\n          >\n            <span class=\"w-full flex-no-shrink font-bold\">\n              {{ task.name }}\n            </span>\n            <p\n              v-if=\"task.description\"\n              class=\"w-full flex-no-shrink mt-1 text-sm\"\n            >\n              {{ task.description }}\n            </p>\n          </div>\n          <input\n            type=\"text\"\n            class=\"block p-2 w-full bg-transparent\"\n            placeholder=\"+ Enter new task\"\n            @keyup.enter=\"createTask($event, column.tasks)\"\n          />\n        </div>\n      </div>\n    </div>\n\n    <div class=\"task-bg\" v-if=\"isTaskOpen\" @click.self=\"close\">\n      <router-view />\n    </div>\n  </div>\n</template>\n\n<script>\nimport { mapState } from 'vuex'\nexport default {\n  computed: {\n    ...mapState(['board']),\n    isTaskOpen() {\n      return this.$route.name === 'task'\n    }\n  },\n  methods: {\n    goToTask(task) {\n      this.$router.push({ name: 'task', params: { id: task.id } })\n    },\n    close() {\n      this.$router.push({ name: 'board' })\n    },\n    createTask(e, tasks) {\n      this.$store.commit('CREATE_TASK', {\n        tasks,\n        name: e.target.value\n      })\n      e.target.value = ''\n    },\n    pickupTask(e, taskIndex, fromColumnIndex) {\n      e.dataTransfer.effectAllowed = 'move'\n      e.dataTransfer.dropEffect = 'move'\n\n      e.dataTransfer.setData('task-index', taskIndex)\n      e.dataTransfer.setData('from-column-index', fromColumnIndex)\n    },\n    moveTask(e, toTasks) {\n      const fromColumnIndex = e.dataTransfer.getData('from-column-index')\n      const fromTasks = this.board.columns[fromColumnIndex].tasks\n\n      const taskIndex = e.dataTransfer.getData('task-index')\n      this.$store.commit('MOVE_TASK', {\n        fromTasks,\n        toTasks,\n        taskIndex\n      })\n    }\n  }\n}\n</script>\n\n<style lang=\"css\">\n.task {\n  @apply flex items-center flex-wrap shadow mb-2 py-2 px-2 rounded bg-white text-grey-darkest no-underline;\n}\n\n.column {\n  @apply bg-grey-light p-2 mr-4 text-left shadow rounded;\n  min-width: 350px;\n}\n\n.board {\n  @apply p-4 bg-teal-dark h-full overflow-auto;\n}\n\n.task-bg {\n  @apply pin absolute;\n  background: rgba(0,0,0,0.5);\n}\n</style>\n"],"sourceRoot":"src/views"}]}
{"remainingRequest":"/Users/orange-juice/Code/VueMastery/personal-todo-board/node_modules/babel-loader/lib/index.js!/Users/orange-juice/Code/VueMastery/personal-todo-board/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/orange-juice/Code/VueMastery/personal-todo-board/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/orange-juice/Code/VueMastery/personal-todo-board/src/views/Board.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/orange-juice/Code/VueMastery/personal-todo-board/src/views/Board.vue","mtime":1568395689478},{"path":"/Users/orange-juice/Code/VueMastery/personal-todo-board/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/orange-juice/Code/VueMastery/personal-todo-board/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/orange-juice/Code/VueMastery/personal-todo-board/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/orange-juice/Code/VueMastery/personal-todo-board/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.object.define-property\";\nimport \"core-js/modules/es6.object.define-properties\";\nimport \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/es6.array.for-each\";\nimport \"core-js/modules/es6.array.filter\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.function.name\";\nimport _defineProperty from \"/Users/orange-juice/Code/VueMastery/personal-todo-board/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapState } from 'vuex';\nimport BoardColumn from '@/components/BoardColumn';\nexport default {\n  components: {\n    BoardColumn: BoardColumn\n  },\n  data: function data() {\n    return {\n      newColumnName: ''\n    };\n  },\n  computed: _objectSpread({}, mapState(['board']), {\n    isTaskOpen: function isTaskOpen() {\n      return this.$route.name === 'task';\n    }\n  }),\n  methods: {\n    close: function close() {\n      this.$router.push({\n        name: 'board'\n      });\n    },\n    createColumn: function createColumn() {\n      this.$store.commit('CREATE_COLUMN', {\n        name: this.newColumnName\n      });\n      this.newColumnName = '';\n    }\n  }\n};",{"version":3,"sources":["Board.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6BA,SAAA,QAAA,QAAA,MAAA;AACA,OAAA,WAAA,MAAA,0BAAA;AACA,eAAA;AACA,EAAA,UAAA,EAAA;AAAA,IAAA,WAAA,EAAA;AAAA,GADA;AAEA,EAAA,IAFA,kBAEA;AACA,WAAA;AACA,MAAA,aAAA,EAAA;AADA,KAAA;AAGA,GANA;AAOA,EAAA,QAAA,oBACA,QAAA,CAAA,CAAA,OAAA,CAAA,CADA;AAEA,IAAA,UAFA,wBAEA;AACA,aAAA,KAAA,MAAA,CAAA,IAAA,KAAA,MAAA;AACA;AAJA,IAPA;AAaA,EAAA,OAAA,EAAA;AACA,IAAA,KADA,mBACA;AACA,WAAA,OAAA,CAAA,IAAA,CAAA;AAAA,QAAA,IAAA,EAAA;AAAA,OAAA;AACA,KAHA;AAIA,IAAA,YAJA,0BAIA;AACA,WAAA,MAAA,CAAA,MAAA,CAAA,eAAA,EAAA;AACA,QAAA,IAAA,EAAA,KAAA;AADA,OAAA;AAGA,WAAA,aAAA,GAAA,EAAA;AACA;AATA;AAbA,CAAA","sourcesContent":["<template>\n  <div class=\"board\">\n    <div class=\"flex flex-row items-start\">\n      <board-column\n        v-for=\"(column, $columnIndex) in board.columns\"\n        :key=\"$columnIndex\"\n        :column=\"column\"\n        :columnIndex=\"$columnIndex\"\n        :board=\"board\"\n      />\n\n      <div class=\"column flex\">\n        <input\n          type=\"text\"\n          class=\"p-2 mr-2 flex-grow\"\n          placeholder=\"New Column Name\"\n          v-model=\"newColumnName\"\n          @keyup.enter=\"createColumn\"\n        />\n      </div>\n    </div>\n\n    <div class=\"task-bg\" v-if=\"isTaskOpen\" @click.self=\"close\">\n      <router-view />\n    </div>\n  </div>\n</template>\n\n<script>\nimport { mapState } from 'vuex'\nimport BoardColumn from '@/components/BoardColumn'\nexport default {\n  components: { BoardColumn },\n  data() {\n    return {\n      newColumnName: ''\n    }\n  },\n  computed: {\n    ...mapState(['board']),\n    isTaskOpen() {\n      return this.$route.name === 'task'\n    }\n  },\n  methods: {\n    close() {\n      this.$router.push({ name: 'board' })\n    },\n    createColumn() {\n      this.$store.commit('CREATE_COLUMN', {\n        name: this.newColumnName\n      })\n      this.newColumnName = ''\n    }\n  }\n}\n</script>\n\n<style lang=\"css\">\n  .board {\n  @apply p-4 bg-yellow-light h-full overflow-auto;\n}\n\n.task-bg {\n  @apply pin absolute;\n  background: rgba(0,0,0,0.5);\n}\n</style>\n"],"sourceRoot":"src/views"}]}